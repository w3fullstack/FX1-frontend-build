{"version":3,"file":"pages/user/index.js","sources":["webpack:///./pages/user/index.vue?5b7b","webpack:///pages/user/index.vue","webpack:///./pages/user/index.vue?7bd9","webpack:///./pages/user/index.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\"div\")}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\" />\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'PageUser',\r\n  layout: 'blank',\r\n  computed: {\r\n    ...mapGetters({\r\n      getActionHandler: 'auth/getActionHandler',\r\n    }),\r\n  },\r\n  async mounted() {\r\n    const { error } = this.getActionHandler\r\n    const { mode, oobCode: actionCode } = this.$route.query\r\n\r\n    if (error) {\r\n      await this.$router.push({\r\n        path: '/signin',\r\n      })\r\n\r\n      this.$toast.error(error, {\r\n        duration: 8000,\r\n        position: 'bottom-left',\r\n        className: 'fx1-error',\r\n        iconPack: 'mdi',\r\n        icon: 'alert-circle-outline',\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    switch (mode) {\r\n      case 'resetPassword': {\r\n        await this.$router.push({\r\n          path: `/create-new-password?c=${actionCode}`,\r\n        })\r\n        break\r\n      }\r\n      case 'verifyAndChangeEmail': {\r\n        try {\r\n          const {\r\n            data: { email },\r\n          } = await this.$store.dispatch('auth/verifyEmail', {\r\n            actionCode,\r\n          })\r\n\r\n          await this.$api.confirmEmailChange({\r\n            input: {\r\n              email,\r\n            },\r\n          })\r\n\r\n          await this.$router.push({\r\n            path: '/account/settings',\r\n          })\r\n\r\n          this.$toast.success('The email address was successfully changed!', {\r\n            duration: 5000,\r\n            position: 'bottom-left',\r\n            className: 'fx1-success',\r\n            iconPack: 'mdi',\r\n            icon: 'alert-circle-outline',\r\n          })\r\n        } catch (error) {\r\n          await this.$router.push({\r\n            path: '/',\r\n          })\r\n\r\n          this.$toast.error(error.message, {\r\n            duration: 5000,\r\n            position: 'bottom-left',\r\n            className: 'fx1-error',\r\n            iconPack: 'mdi',\r\n            icon: 'alert-circle-outline',\r\n          })\r\n        }\r\n        break\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      authLogOut: 'auth/authLogOut',\r\n    }),\r\n  },\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=3c85e02e&lang=pug&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"23910c05\"\n  \n)\n\nexport default component.exports"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;ACCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}